apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: registry
  name: registry-config
  namespace: source-system
data:
  config.yml: |
    version: 0.1
    log:
      fields:
        service: registry
    storage:
      cache:
        blobdescriptor: inmemory
      filesystem:
        rootdirectory: /var/lib/registry
    http:
      addr: :5000
      headers:
        X-Content-Type-Options: [nosniff]
      tls:
        certificate: /etc/docker/certs/tls.crt
        key: /etc/docker/certs/tls.key
    health:
      storagedriver:
        enabled: true
        interval: 10s
        threshold: 3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: registry
  name: registry
  namespace: source-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: registry
  template:
    metadata:
      labels:
        app.kubernetes.io/name: registry
    spec:
      automountServiceAccountToken: false
      containers:
      - image: registry:2.8.3
        name: registry
        resources:
          requests:
            cpu: 50m
            memory: 100M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        ports:
        - name: https
          containerPort: 5000
          protocol: TCP
        volumeMounts:
        - mountPath: /var/lib/registry
          name: data
        - mountPath: /etc/docker/registry
          name: config
        - mountPath: /etc/docker/certs
          name: tls
      securityContext:
        fsGroup: 3000
        runAsGroup: 3000
        runAsUser: 3000
      volumes:
      - hostPath:
          path: /var/lib/registry
          type: DirectoryOrCreate
        name: data
      - configMap:
          name: registry-config
        name: config
      - secret:
          secretName: registry-tls
        name: tls
---
apiVersion: v1
kind: Service
metadata:
  name: registry
  namespace: source-system
  labels:
    app.kubernetes.io/name: registry
spec:
  ports:
  - name: https
    port: 443
    protocol: TCP
    targetPort: 5000
  selector:
    app.kubernetes.io/name: registry
  type: ClusterIP
---
# FLUX
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: registry-local
  namespace: flux-system
spec:
  type: "oci"
  interval: 5m0s
  url: oci://registry.source-system
  certSecretRef:
    name: registry-ca
---
apiVersion: v1
kind: Secret
metadata:
  name: registry-ca
  namespace: flux-system
data:
  ca.crt: ${clusterCA__cert_b64}
